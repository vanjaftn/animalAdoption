{"ast":null,"code":"import { Animal } from '../model/animal.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/admin.service\";\nimport * as i2 from \"@angular/forms\";\nexport class RegisterAnimalComponent {\n  constructor(adminService) {\n    this.adminService = adminService;\n    this.user = new Animal();\n  }\n  ngOnInit() {\n    console.log(localStorage.getItem('token'));\n  }\n  getDate() {\n    let date = new Date();\n    let day = date.getDate();\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n    return `${year}-${month < 9 ? '0' + month : month}-${day < 9 ? '0' + day : day}`;\n  }\n  register() {\n    this.adminService.registerAnimal().subscribe(response => {\n      console.log(response);\n      alert('Successfully registered');\n      window.location.href = '/login-user';\n    }, error => {\n      alert(\"Invalid registration\");\n      console.log(error);\n    });\n  }\n}\nRegisterAnimalComponent.ɵfac = function RegisterAnimalComponent_Factory(t) {\n  return new (t || RegisterAnimalComponent)(i0.ɵɵdirectiveInject(i1.AdminlService));\n};\nRegisterAnimalComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RegisterAnimalComponent,\n  selectors: [[\"app-register-animal\"]],\n  decls: 38,\n  vars: 9,\n  consts: [[1, \"registration-container\"], [1, \"registration-form\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"email\"], [\"type\", \"email\", \"id\", \"email\", \"name\", \"email\", \"placeholder\", \"Enter your email\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"password\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"placeholder\", \"Enter your password\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"firstName\"], [\"type\", \"text\", \"id\", \"firstName\", \"name\", \"firstName\", \"placeholder\", \"Enter your first name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"lastName\"], [\"type\", \"text\", \"id\", \"lastName\", \"name\", \"lastName\", \"placeholder\", \"Enter your last name\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"dateOfBirth\", 1, \"form-label\"], [\"type\", \"date\", \"id\", \"dateOfBirth\", \"name\", \"dateOfBirth\", 3, \"ngModel\", \"max\", \"ngModelChange\"], [\"type\", \"checkbox\", \"id\", \"sterilized\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn-register\"]],\n  template: function RegisterAnimalComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n      i0.ɵɵtext(3, \"Register\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function RegisterAnimalComponent_Template_form_ngSubmit_4_listener() {\n        return ctx.register();\n      });\n      i0.ɵɵelementStart(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterAnimalComponent_Template_input_ngModelChange_8_listener($event) {\n        return ctx.animal.name = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(9, \"div\", 3)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterAnimalComponent_Template_input_ngModelChange_12_listener($event) {\n        return ctx.animal.chipNumber = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 8);\n      i0.ɵɵtext(15, \"First name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterAnimalComponent_Template_input_ngModelChange_16_listener($event) {\n        return ctx.animal.location = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 3)(18, \"label\", 10);\n      i0.ɵɵtext(19, \"Last name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterAnimalComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.animal.description = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"div\", 3)(22, \"label\", 12);\n      i0.ɵɵtext(23, \"Date of birth\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"input\", 13);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterAnimalComponent_Template_input_ngModelChange_24_listener($event) {\n        return ctx.animal.dateOfBirth = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\", 3)(26, \"label\", 10);\n      i0.ɵɵtext(27, \"Last name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterAnimalComponent_Template_input_ngModelChange_28_listener($event) {\n        return ctx.animal.size = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(29, \"div\", 3)(30, \"label\", 10);\n      i0.ɵɵtext(31, \"Last name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"input\", 11);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterAnimalComponent_Template_input_ngModelChange_32_listener($event) {\n        return ctx.animal.animalTypeId = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(33, \"label\");\n      i0.ɵɵtext(34, \" Is sterelized: \");\n      i0.ɵɵelementStart(35, \"input\", 14);\n      i0.ɵɵlistener(\"ngModelChange\", function RegisterAnimalComponent_Template_input_ngModelChange_35_listener($event) {\n        return ctx.animal.sterilized = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(36, \"button\", 15);\n      i0.ɵɵtext(37, \"Register\");\n      i0.ɵɵelementEnd()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.animal.name);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.animal.chipNumber);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.animal.location);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.animal.description);\n      i0.ɵɵadvance(4);\n      i0.ɵɵpropertyInterpolate(\"max\", ctx.getDate());\n      i0.ɵɵproperty(\"ngModel\", ctx.animal.dateOfBirth);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.animal.size);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.animal.animalTypeId);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.animal.sterilized);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Animal","RegisterAnimalComponent","constructor","adminService","user","ngOnInit","console","log","localStorage","getItem","getDate","date","Date","day","month","getMonth","year","getFullYear","register","registerAnimal","subscribe","response","alert","window","location","href","error","i0","ɵɵdirectiveInject","i1","AdminlService","selectors","decls","vars","consts","template","RegisterAnimalComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegisterAnimalComponent_Template_form_ngSubmit_4_listener","RegisterAnimalComponent_Template_input_ngModelChange_8_listener","$event","animal","name","RegisterAnimalComponent_Template_input_ngModelChange_12_listener","chipNumber","RegisterAnimalComponent_Template_input_ngModelChange_16_listener","RegisterAnimalComponent_Template_input_ngModelChange_20_listener","description","RegisterAnimalComponent_Template_input_ngModelChange_24_listener","dateOfBirth","RegisterAnimalComponent_Template_input_ngModelChange_28_listener","size","RegisterAnimalComponent_Template_input_ngModelChange_32_listener","animalTypeId","RegisterAnimalComponent_Template_input_ngModelChange_35_listener","sterilized","ɵɵadvance","ɵɵproperty","ɵɵpropertyInterpolate"],"sources":["C:\\Users\\vanja\\Desktop\\diplomski\\animalAdoption\\animalAdoptionFrontend\\src\\app\\modules\\register-animal\\register-animal.component.ts","C:\\Users\\vanja\\Desktop\\diplomski\\animalAdoption\\animalAdoptionFrontend\\src\\app\\modules\\register-animal\\register-animal.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Animal } from '../model/animal.model';\nimport { AnimalService } from '../service/animal.service';\nimport { AdminlService } from '../service/admin.service';\n\n@Component({\n  selector: 'app-register-animal',\n  templateUrl: './register-animal.component.html',\n  styleUrls: ['./register-animal.component.css']\n})\nexport class RegisterAnimalComponent {\n  public user : Animal = new Animal();\n\n  constructor(private adminService: AdminlService) { }\n\n  ngOnInit(): void {\n    console.log(localStorage.getItem('token'));\n\n  }\n\n  public getDate(): string {\n    let date = new Date();\n    let day = date.getDate();\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n    return `${year}-${month < 9 ? ('0'+month) : month}-${day < 9 ? ('0'+day) : day}`;\n  }\n\n  register(){\n    this.adminService.registerAnimal().subscribe((response: any) => {\n      console.log(response)\n\n      alert('Successfully registered');\n\n      window.location.href = '/login-user'\n    },\n    (error) => {\n      alert(\"Invalid registration\");\n      console.log(error);\n    }\n   );\n  }\n}\n","<div class=\"registration-container\">\n    <div class=\"registration-form\">\n      <h2>Register</h2>\n      <form (ngSubmit)=\"register()\">\n        <div class=\"form-group\">\n          <label for=\"email\">Email</label>\n          <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Enter your email\" [(ngModel)]=\"animal.name\" required>\n        </div>\n        \n        <div class=\"form-group\">\n          <label for=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter your password\"  [(ngModel)]=\"animal.chipNumber\" required>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"firstName\">First name</label>\n          <input type=\"text\" id=\"firstName\" name=\"firstName\" placeholder=\"Enter your first name\"  [(ngModel)]=\"animal.location\" required>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"lastName\">Last name</label>\n          <input type=\"text\" id=\"lastName\" name=\"lastName\" placeholder=\"Enter your last name\"  [(ngModel)]=\"animal.description\" required>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"dateOfBirth\" class=\"form-label\">Date of birth</label>\n          <input type=\"date\" id=\"dateOfBirth\" name=\"dateOfBirth\" [(ngModel)]=\"animal.dateOfBirth\" max=\"{{getDate()}}\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"lastName\">Last name</label>\n        <input type=\"text\" id=\"lastName\" name=\"lastName\" placeholder=\"Enter your last name\"  [(ngModel)]=\"animal.size\" required>\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"lastName\">Last name</label>\n        <input type=\"text\" id=\"lastName\" name=\"lastName\" placeholder=\"Enter your last name\"  [(ngModel)]=\"animal.animalTypeId\" required>\n      </div>\n\n      <label>\n        Is sterelized:\n        <input type=\"checkbox\" [(ngModel)]=\"animal.sterilized\" id=\"sterilized\" />\n      </label>\n        \n        <button type=\"submit\" class=\"btn-register\">Register</button>\n      </form>\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
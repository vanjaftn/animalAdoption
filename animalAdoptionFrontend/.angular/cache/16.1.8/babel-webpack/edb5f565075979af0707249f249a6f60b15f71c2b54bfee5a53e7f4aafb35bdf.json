{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AdoptionService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = 'http://localhost:9000';\n    this.token = localStorage.getItem('token');\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    this.headers2 = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.token}`\n    });\n    this.headers3 = new HttpHeaders({\n      'Authorization': `Bearer ${this.token}`\n    });\n  }\n  create(adoption) {\n    return this.http.post(this.apiServerUrl + '/adoption', adoption, {\n      headers: this.headers2,\n      responseType: 'text'\n    });\n  }\n  adminApprove(adoptionId) {\n    return this.http.post(this.apiServerUrl + '/adminApprove', JSON.stringify(adoptionId), {\n      headers: this.headers2,\n      responseType: 'text'\n    });\n  }\n  vetApprove(adoptionId) {\n    return this.http.post(this.apiServerUrl + '/vetApprove', JSON.stringify(adoptionId), {\n      headers: this.headers2,\n      responseType: 'text'\n    });\n  }\n  deletePending(adoptionId) {\n    return this.http.post(this.apiServerUrl + '/deletePending/' + adoptionId, null, {\n      headers: this.headers2,\n      responseType: 'text'\n    });\n  }\n  deleteApproved(adoptionId) {\n    return this.http.post(this.apiServerUrl + '/deleteApproved/' + adoptionId, null, {\n      headers: this.headers2,\n      responseType: 'text'\n    });\n  }\n  approvedAdoptionExists(animalId) {\n    return this.http.post(this.apiServerUrl + '/approvedAdoptionExists', JSON.stringify(animalId), {\n      headers: this.headers2,\n      responseType: 'text'\n    });\n  }\n  readByUserAndAnimalId(adoptionDTO) {\n    return this.http.post(this.apiServerUrl + '/readByUserAndAnimalId', adoptionDTO, {\n      headers: this.headers2,\n      responseType: 'text'\n    });\n  }\n  readAllUsersAdoptions() {\n    return this.http.get(this.apiServerUrl + '/readAllUsersAdoptions', {\n      headers: this.headers2,\n      responseType: 'text'\n    });\n  }\n  readAllUsersApprovedAdoptions() {\n    return this.http.get(this.apiServerUrl + '/readAllUsersApprovedAdoptions', {\n      headers: this.headers2,\n      responseType: 'text'\n    });\n  }\n  animalAdopted(animalId) {\n    return this.http.post(this.apiServerUrl + '/animalAdopted', JSON.stringify(animalId), {\n      headers: this.headers2,\n      responseType: 'text'\n    });\n  }\n}\nAdoptionService.ɵfac = function AdoptionService_Factory(t) {\n  return new (t || AdoptionService)(i0.ɵɵinject(i1.HttpClient));\n};\nAdoptionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AdoptionService,\n  factory: AdoptionService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","AdoptionService","constructor","http","apiServerUrl","token","localStorage","getItem","headers","headers2","headers3","create","adoption","post","responseType","adminApprove","adoptionId","JSON","stringify","vetApprove","deletePending","deleteApproved","approvedAdoptionExists","animalId","readByUserAndAnimalId","adoptionDTO","readAllUsersAdoptions","get","readAllUsersApprovedAdoptions","animalAdopted","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\vanja\\Desktop\\diplomski\\animalAdoption\\animalAdoptionFrontend\\src\\app\\modules\\service\\adoption.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Adoption } from '../model/adoption.model';\r\nimport { AdoptionDTO } from '../model/adoption-DTO.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdoptionService {\r\n\r\n  private apiServerUrl = 'http://localhost:9000';\r\n  private token = localStorage.getItem('token')\r\n  headers: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json'});\r\n  headers2: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': `Bearer ${this.token}`});\r\n  headers3: HttpHeaders = new HttpHeaders({'Authorization': `Bearer ${this.token}`});\r\n\r\n  constructor(private http: HttpClient) { }\r\n  \r\n  create(adoption: Adoption): Observable<any> {\r\n    return this.http.post(this.apiServerUrl + '/adoption', adoption, {headers: this.headers2, responseType: 'text'});\r\n  }\r\n\r\n  adminApprove(adoptionId: string): Observable<any> {\r\n    return this.http.post(this.apiServerUrl + '/adminApprove', JSON.stringify(adoptionId), {headers: this.headers2, responseType: 'text'});\r\n  }\r\n\r\n  vetApprove(adoptionId: string): Observable<any> {\r\n    return this.http.post(this.apiServerUrl + '/vetApprove', JSON.stringify(adoptionId), {headers: this.headers2, responseType: 'text'});\r\n  }\r\n\r\n  deletePending(adoptionId: string): Observable<any> {\r\n    return this.http.post(this.apiServerUrl + '/deletePending/' + adoptionId, null, {headers: this.headers2, responseType: 'text'});\r\n  }\r\n\r\n  deleteApproved(adoptionId: string): Observable<any> {\r\n    return this.http.post(this.apiServerUrl + '/deleteApproved/' + adoptionId, null, {headers: this.headers2, responseType: 'text'});\r\n  }\r\n\r\n  approvedAdoptionExists(animalId: string): Observable<any> {\r\n    return this.http.post(this.apiServerUrl + '/approvedAdoptionExists', JSON.stringify(animalId), {headers: this.headers2, responseType: 'text'});\r\n  }\r\n\r\n  readByUserAndAnimalId(adoptionDTO: AdoptionDTO): Observable<any> {\r\n    return this.http.post(this.apiServerUrl + '/readByUserAndAnimalId', adoptionDTO, {headers: this.headers2, responseType: 'text'});\r\n  }\r\n\r\n  readAllUsersAdoptions(): Observable<any> {\r\n    return this.http.get(this.apiServerUrl + '/readAllUsersAdoptions', {headers: this.headers2, responseType: 'text'});\r\n  }\r\n\r\n  readAllUsersApprovedAdoptions(): Observable<any> {\r\n    return this.http.get(this.apiServerUrl + '/readAllUsersApprovedAdoptions', {headers: this.headers2, responseType: 'text'});\r\n  }\r\n\r\n  animalAdopted(animalId: string): Observable<any> {\r\n    return this.http.post(this.apiServerUrl + '/animalAdopted', JSON.stringify(animalId), {headers: this.headers2, responseType: 'text'});\r\n  }\r\n}"],"mappings":"AACA,SAAqBA,WAAW,QAA2B,sBAAsB;;;AAQjF,OAAM,MAAOC,eAAe;EAQ1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANhB,KAAAC,YAAY,GAAG,uBAAuB;IACtC,KAAAC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC7C,KAAAC,OAAO,GAAgB,IAAIR,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAC,CAAC;IAC7E,KAAAS,QAAQ,GAAgB,IAAIT,WAAW,CAAC;MAAE,cAAc,EAAE,kBAAkB;MAAE,eAAe,EAAE,UAAU,IAAI,CAACK,KAAK;IAAE,CAAC,CAAC;IACvH,KAAAK,QAAQ,GAAgB,IAAIV,WAAW,CAAC;MAAC,eAAe,EAAE,UAAU,IAAI,CAACK,KAAK;IAAE,CAAC,CAAC;EAE1C;EAExCM,MAAMA,CAACC,QAAkB;IACvB,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,IAAI,CAACT,YAAY,GAAG,WAAW,EAAEQ,QAAQ,EAAE;MAACJ,OAAO,EAAE,IAAI,CAACC,QAAQ;MAAEK,YAAY,EAAE;IAAM,CAAC,CAAC;EAClH;EAEAC,YAAYA,CAACC,UAAkB;IAC7B,OAAO,IAAI,CAACb,IAAI,CAACU,IAAI,CAAC,IAAI,CAACT,YAAY,GAAG,eAAe,EAAEa,IAAI,CAACC,SAAS,CAACF,UAAU,CAAC,EAAE;MAACR,OAAO,EAAE,IAAI,CAACC,QAAQ;MAAEK,YAAY,EAAE;IAAM,CAAC,CAAC;EACxI;EAEAK,UAAUA,CAACH,UAAkB;IAC3B,OAAO,IAAI,CAACb,IAAI,CAACU,IAAI,CAAC,IAAI,CAACT,YAAY,GAAG,aAAa,EAAEa,IAAI,CAACC,SAAS,CAACF,UAAU,CAAC,EAAE;MAACR,OAAO,EAAE,IAAI,CAACC,QAAQ;MAAEK,YAAY,EAAE;IAAM,CAAC,CAAC;EACtI;EAEAM,aAAaA,CAACJ,UAAkB;IAC9B,OAAO,IAAI,CAACb,IAAI,CAACU,IAAI,CAAC,IAAI,CAACT,YAAY,GAAG,iBAAiB,GAAGY,UAAU,EAAE,IAAI,EAAE;MAACR,OAAO,EAAE,IAAI,CAACC,QAAQ;MAAEK,YAAY,EAAE;IAAM,CAAC,CAAC;EACjI;EAEAO,cAAcA,CAACL,UAAkB;IAC/B,OAAO,IAAI,CAACb,IAAI,CAACU,IAAI,CAAC,IAAI,CAACT,YAAY,GAAG,kBAAkB,GAAGY,UAAU,EAAE,IAAI,EAAE;MAACR,OAAO,EAAE,IAAI,CAACC,QAAQ;MAAEK,YAAY,EAAE;IAAM,CAAC,CAAC;EAClI;EAEAQ,sBAAsBA,CAACC,QAAgB;IACrC,OAAO,IAAI,CAACpB,IAAI,CAACU,IAAI,CAAC,IAAI,CAACT,YAAY,GAAG,yBAAyB,EAAEa,IAAI,CAACC,SAAS,CAACK,QAAQ,CAAC,EAAE;MAACf,OAAO,EAAE,IAAI,CAACC,QAAQ;MAAEK,YAAY,EAAE;IAAM,CAAC,CAAC;EAChJ;EAEAU,qBAAqBA,CAACC,WAAwB;IAC5C,OAAO,IAAI,CAACtB,IAAI,CAACU,IAAI,CAAC,IAAI,CAACT,YAAY,GAAG,wBAAwB,EAAEqB,WAAW,EAAE;MAACjB,OAAO,EAAE,IAAI,CAACC,QAAQ;MAAEK,YAAY,EAAE;IAAM,CAAC,CAAC;EAClI;EAEAY,qBAAqBA,CAAA;IACnB,OAAO,IAAI,CAACvB,IAAI,CAACwB,GAAG,CAAC,IAAI,CAACvB,YAAY,GAAG,wBAAwB,EAAE;MAACI,OAAO,EAAE,IAAI,CAACC,QAAQ;MAAEK,YAAY,EAAE;IAAM,CAAC,CAAC;EACpH;EAEAc,6BAA6BA,CAAA;IAC3B,OAAO,IAAI,CAACzB,IAAI,CAACwB,GAAG,CAAC,IAAI,CAACvB,YAAY,GAAG,gCAAgC,EAAE;MAACI,OAAO,EAAE,IAAI,CAACC,QAAQ;MAAEK,YAAY,EAAE;IAAM,CAAC,CAAC;EAC5H;EAEAe,aAAaA,CAACN,QAAgB;IAC5B,OAAO,IAAI,CAACpB,IAAI,CAACU,IAAI,CAAC,IAAI,CAACT,YAAY,GAAG,gBAAgB,EAAEa,IAAI,CAACC,SAAS,CAACK,QAAQ,CAAC,EAAE;MAACf,OAAO,EAAE,IAAI,CAACC,QAAQ;MAAEK,YAAY,EAAE;IAAM,CAAC,CAAC;EACvI;;AAhDWb,eAAe,C;mBAAfA,eAAe,EAAA6B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAfhC,eAAe,C;SAAfA,eAAe;EAAAiC,OAAA,EAAfjC,eAAe,CAAAkC,IAAA;EAAAC,UAAA,EAFd;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
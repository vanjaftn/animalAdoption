{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { User } from '../model/user.model';\nexport let UpdateUserPageComponent = class UpdateUserPageComponent {\n  constructor(adminService, photoService, userService) {\n    this.adminService = adminService;\n    this.photoService = photoService;\n    this.userService = userService;\n    this.userProfile = new User();\n    this.dob = \"\";\n  }\n  ngOnInit() {\n    console.log(localStorage.getItem('token'));\n    this.read();\n  }\n  getDate(date) {\n    let day = date.getDate();\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n    this.dob = day + '.' + month + '.' + year + '.';\n    console.log(this.dob);\n  }\n  read() {\n    this.userService.readLoggedInUser().subscribe(response => {\n      console.log(JSON.parse(response));\n      this.userProfile = JSON.parse(response);\n      this.getDate(new Date(this.userProfile.dateOfBirth));\n    });\n  }\n};\nUpdateUserPageComponent = __decorate([Component({\n  selector: 'app-update-user-page',\n  templateUrl: './update-user-page.component.html',\n  styleUrls: ['./update-user-page.component.css']\n})], UpdateUserPageComponent);","map":{"version":3,"names":["Component","User","UpdateUserPageComponent","constructor","adminService","photoService","userService","userProfile","dob","ngOnInit","console","log","localStorage","getItem","read","getDate","date","day","month","getMonth","year","getFullYear","readLoggedInUser","subscribe","response","JSON","parse","Date","dateOfBirth","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\vanja\\Desktop\\diplomski\\animalAdoption\\animalAdoptionFrontend\\src\\app\\modules\\update-user-page\\update-user-page.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AnimalService } from '../service/animal.service';\nimport { AdminService } from '../service/admin.service';\nimport { PhotoService } from '../service/photo.service';\nimport { AnimalWithPhotosDTO } from '../model/animalWithPhotosDTO.model';\nimport { User } from '../model/user.model';\nimport { UserService } from '../service/user.service';\n\n@Component({\n  selector: 'app-update-user-page',\n  templateUrl: './update-user-page.component.html',\n  styleUrls: ['./update-user-page.component.css']\n})\nexport class UpdateUserPageComponent {\n  public userProfile: User = new User\n  public dob : String = \"\"\n\n  constructor(private adminService: AdminService, private photoService: PhotoService, private userService: UserService) { }\n\n  ngOnInit(): void {\n    console.log(localStorage.getItem('token'));\n    this.read()\n  }\n\n  public getDate(date : Date) {\n    let day = date.getDate();\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n    this.dob = day + '.' + month + '.' + year + '.'\n    console.log(this.dob)\n  }\n\n  read(){\n    this.userService.readLoggedInUser().subscribe((response: any) => {\n      console.log(JSON.parse(response))\n      this.userProfile = JSON.parse(response)\n\n      this.getDate(new Date(this.userProfile.dateOfBirth))\n\n    }\n   );\n  }\n\n//   update(){\n\n//   this.selectedFiles.forEach(file => {\n//     const formData = new FormData();\n\n//     formData.append('image', file, file.name)\n  \n//     console.log(file) \n  \n//     this.photoService.uploadPhoto(formData).subscribe(response=>{\n//       console.log(response)\n//       // window.location.reload()\n\n//     })\n//       this.fileURLs.push(file.name)\n\n//       console.log(this.fileURLs)\n\n\n//   });\n//   //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!REGISTRATION\n//   // if(this.selectedAnimalProfile.sterilized == null){\n//   //   this.animal.sterilized = false\n//   // }\n\n//   this.selectedAnimalProfile.chipNumber = Number(this.selectedAnimalProfile.chipNumber)\n//   this.selectedAnimalProfile.photos = this.fileURLs\n\n//   console.log(this.fileURLs)\n//   console.log(this.selectedAnimalProfile)\n  \n//   this.adminService.updateAnimal(this.selectedAnimalProfile).subscribe((response: any) => {\n//     console.log(response)\n\n//     alert('Successfully updated');\n\n//     // const animalId = this.selectedAnimalProfileId\n//     // const animalURL = `animal-profile/${animalId}`;\n//     // window.location.href = animalURL;  \n\n//   },(error) => {\n//     alert(\"Invalid update\");\n//     console.log(error);\n//   }\n//  );\n\n//   }\n \n//   uploadPhoto(event: any) {\n//     const selectedFiles: FileList = event.target.files;\n\n//     console.log(selectedFiles)\n\n//     if (selectedFiles.length > 0) {\n//       for (let i = 0; i < selectedFiles.length; i++) {\n//         this.selectedFile = <File>event.target.files[i]\n//         console.log(this.selectedFile)\n        \n//         this.selectedFiles.push(this.selectedFile)\n\n//       }\n//     }\n\n//     console.log(this.selectedFiles)\n//   }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAKzC,SAASC,IAAI,QAAQ,qBAAqB;AAQnC,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAIlCC,YAAoBC,YAA0B,EAAUC,YAA0B,EAAUC,WAAwB;IAAhG,KAAAF,YAAY,GAAZA,YAAY;IAAwB,KAAAC,YAAY,GAAZA,YAAY;IAAwB,KAAAC,WAAW,GAAXA,WAAW;IAHhG,KAAAC,WAAW,GAAS,IAAIN,IAAI,CAAJ,CAAI;IAC5B,KAAAO,GAAG,GAAY,EAAE;EAEgG;EAExHC,QAAQA,CAAA;IACNC,OAAO,CAACC,GAAG,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC;IAC1C,IAAI,CAACC,IAAI,EAAE;EACb;EAEOC,OAAOA,CAACC,IAAW;IACxB,IAAIC,GAAG,GAAGD,IAAI,CAACD,OAAO,EAAE;IACxB,IAAIG,KAAK,GAAGF,IAAI,CAACG,QAAQ,EAAE,GAAG,CAAC;IAC/B,IAAIC,IAAI,GAAGJ,IAAI,CAACK,WAAW,EAAE;IAC7B,IAAI,CAACb,GAAG,GAAGS,GAAG,GAAG,GAAG,GAAGC,KAAK,GAAG,GAAG,GAAGE,IAAI,GAAG,GAAG;IAC/CV,OAAO,CAACC,GAAG,CAAC,IAAI,CAACH,GAAG,CAAC;EACvB;EAEAM,IAAIA,CAAA;IACF,IAAI,CAACR,WAAW,CAACgB,gBAAgB,EAAE,CAACC,SAAS,CAAEC,QAAa,IAAI;MAC9Dd,OAAO,CAACC,GAAG,CAACc,IAAI,CAACC,KAAK,CAACF,QAAQ,CAAC,CAAC;MACjC,IAAI,CAACjB,WAAW,GAAGkB,IAAI,CAACC,KAAK,CAACF,QAAQ,CAAC;MAEvC,IAAI,CAACT,OAAO,CAAC,IAAIY,IAAI,CAAC,IAAI,CAACpB,WAAW,CAACqB,WAAW,CAAC,CAAC;IAEtD,CAAC,CACD;EACF;CAmED;AA/FY1B,uBAAuB,GAAA2B,UAAA,EALnC7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,sBAAsB;EAChCC,WAAW,EAAE,mCAAmC;EAChDC,SAAS,EAAE,CAAC,kCAAkC;CAC/C,CAAC,C,EACW9B,uBAAuB,CA+FnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import { ApplicationRef, ComponentFactoryResolver, Inject, Injectable, Injector } from '@angular/core';\nimport { LightboxComponent } from './lightbox.component';\nimport { LightboxConfig } from './lightbox-config.service';\nimport { LightboxEvent, LIGHTBOX_EVENT } from './lightbox-event.service';\nimport { LightboxOverlayComponent } from './lightbox-overlay.component';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./lightbox-config.service\";\nimport * as i2 from \"./lightbox-event.service\";\nexport class Lightbox {\n  constructor(_componentFactoryResolver, _injector, _applicationRef, _lightboxConfig, _lightboxEvent, _documentRef) {\n    this._componentFactoryResolver = _componentFactoryResolver;\n    this._injector = _injector;\n    this._applicationRef = _applicationRef;\n    this._lightboxConfig = _lightboxConfig;\n    this._lightboxEvent = _lightboxEvent;\n    this._documentRef = _documentRef;\n  }\n  open(album, curIndex = 0, options = {}) {\n    const overlayComponentRef = this._createComponent(LightboxOverlayComponent);\n    const componentRef = this._createComponent(LightboxComponent);\n    const newOptions = {};\n    // broadcast open event\n    this._lightboxEvent.broadcastLightboxEvent({\n      id: LIGHTBOX_EVENT.OPEN\n    });\n    Object.assign(newOptions, this._lightboxConfig, options);\n    // attach input to lightbox\n    componentRef.instance.album = album;\n    componentRef.instance.currentImageIndex = curIndex;\n    componentRef.instance.options = newOptions;\n    componentRef.instance.cmpRef = componentRef;\n    // attach input to overlay\n    overlayComponentRef.instance.options = newOptions;\n    overlayComponentRef.instance.cmpRef = overlayComponentRef;\n    // FIXME: not sure why last event is broadcasted (which is CLOSED) and make\n    // lightbox can not be opened the second time.\n    // Need to timeout so that the OPEN event is set before component is initialized\n    setTimeout(() => {\n      this._applicationRef.attachView(overlayComponentRef.hostView);\n      this._applicationRef.attachView(componentRef.hostView);\n      overlayComponentRef.onDestroy(() => {\n        this._applicationRef.detachView(overlayComponentRef.hostView);\n      });\n      componentRef.onDestroy(() => {\n        this._applicationRef.detachView(componentRef.hostView);\n      });\n      const containerElement = newOptions.containerElementResolver(this._documentRef);\n      containerElement.appendChild(overlayComponentRef.location.nativeElement);\n      containerElement.appendChild(componentRef.location.nativeElement);\n    });\n  }\n  close() {\n    if (this._lightboxEvent) {\n      this._lightboxEvent.broadcastLightboxEvent({\n        id: LIGHTBOX_EVENT.CLOSE\n      });\n    }\n  }\n  _createComponent(ComponentClass) {\n    const factory = this._componentFactoryResolver.resolveComponentFactory(ComponentClass);\n    const component = factory.create(this._injector);\n    return component;\n  }\n}\nLightbox.ɵfac = function Lightbox_Factory(t) {\n  return new (t || Lightbox)(i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(i1.LightboxConfig), i0.ɵɵinject(i2.LightboxEvent), i0.ɵɵinject(DOCUMENT));\n};\nLightbox.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: Lightbox,\n  factory: Lightbox.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Lightbox, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i0.ComponentFactoryResolver\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.ApplicationRef\n    }, {\n      type: i1.LightboxConfig\n    }, {\n      type: i2.LightboxEvent\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, null);\n})();","map":{"version":3,"names":["ApplicationRef","ComponentFactoryResolver","Inject","Injectable","Injector","LightboxComponent","LightboxConfig","LightboxEvent","LIGHTBOX_EVENT","LightboxOverlayComponent","DOCUMENT","i0","i1","i2","Lightbox","constructor","_componentFactoryResolver","_injector","_applicationRef","_lightboxConfig","_lightboxEvent","_documentRef","open","album","curIndex","options","overlayComponentRef","_createComponent","componentRef","newOptions","broadcastLightboxEvent","id","OPEN","Object","assign","instance","currentImageIndex","cmpRef","setTimeout","attachView","hostView","onDestroy","detachView","containerElement","containerElementResolver","appendChild","location","nativeElement","close","CLOSE","ComponentClass","factory","resolveComponentFactory","component","create","ɵfac","Lightbox_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","ngDevMode","ɵsetClassMetadata","type","undefined","decorators","args"],"sources":["C:/Users/vanja/Desktop/diplomski/animalAdoption/animalAdoptionFrontend/node_modules/ngx-lightbox/lightbox.service.js"],"sourcesContent":["import { ApplicationRef, ComponentFactoryResolver, Inject, Injectable, Injector } from '@angular/core';\nimport { LightboxComponent } from './lightbox.component';\nimport { LightboxConfig } from './lightbox-config.service';\nimport { LightboxEvent, LIGHTBOX_EVENT } from './lightbox-event.service';\nimport { LightboxOverlayComponent } from './lightbox-overlay.component';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./lightbox-config.service\";\nimport * as i2 from \"./lightbox-event.service\";\nexport class Lightbox {\n    constructor(_componentFactoryResolver, _injector, _applicationRef, _lightboxConfig, _lightboxEvent, _documentRef) {\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._injector = _injector;\n        this._applicationRef = _applicationRef;\n        this._lightboxConfig = _lightboxConfig;\n        this._lightboxEvent = _lightboxEvent;\n        this._documentRef = _documentRef;\n    }\n    open(album, curIndex = 0, options = {}) {\n        const overlayComponentRef = this._createComponent(LightboxOverlayComponent);\n        const componentRef = this._createComponent(LightboxComponent);\n        const newOptions = {};\n        // broadcast open event\n        this._lightboxEvent.broadcastLightboxEvent({ id: LIGHTBOX_EVENT.OPEN });\n        Object.assign(newOptions, this._lightboxConfig, options);\n        // attach input to lightbox\n        componentRef.instance.album = album;\n        componentRef.instance.currentImageIndex = curIndex;\n        componentRef.instance.options = newOptions;\n        componentRef.instance.cmpRef = componentRef;\n        // attach input to overlay\n        overlayComponentRef.instance.options = newOptions;\n        overlayComponentRef.instance.cmpRef = overlayComponentRef;\n        // FIXME: not sure why last event is broadcasted (which is CLOSED) and make\n        // lightbox can not be opened the second time.\n        // Need to timeout so that the OPEN event is set before component is initialized\n        setTimeout(() => {\n            this._applicationRef.attachView(overlayComponentRef.hostView);\n            this._applicationRef.attachView(componentRef.hostView);\n            overlayComponentRef.onDestroy(() => {\n                this._applicationRef.detachView(overlayComponentRef.hostView);\n            });\n            componentRef.onDestroy(() => {\n                this._applicationRef.detachView(componentRef.hostView);\n            });\n            const containerElement = newOptions.containerElementResolver(this._documentRef);\n            containerElement.appendChild(overlayComponentRef.location.nativeElement);\n            containerElement.appendChild(componentRef.location.nativeElement);\n        });\n    }\n    close() {\n        if (this._lightboxEvent) {\n            this._lightboxEvent.broadcastLightboxEvent({ id: LIGHTBOX_EVENT.CLOSE });\n        }\n    }\n    _createComponent(ComponentClass) {\n        const factory = this._componentFactoryResolver.resolveComponentFactory(ComponentClass);\n        const component = factory.create(this._injector);\n        return component;\n    }\n}\nLightbox.ɵfac = function Lightbox_Factory(t) { return new (t || Lightbox)(i0.ɵɵinject(i0.ComponentFactoryResolver), i0.ɵɵinject(i0.Injector), i0.ɵɵinject(i0.ApplicationRef), i0.ɵɵinject(i1.LightboxConfig), i0.ɵɵinject(i2.LightboxEvent), i0.ɵɵinject(DOCUMENT)); };\nLightbox.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: Lightbox, factory: Lightbox.ɵfac });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(Lightbox, [{\n        type: Injectable\n    }], function () { return [{ type: i0.ComponentFactoryResolver }, { type: i0.Injector }, { type: i0.ApplicationRef }, { type: i1.LightboxConfig }, { type: i2.LightboxEvent }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
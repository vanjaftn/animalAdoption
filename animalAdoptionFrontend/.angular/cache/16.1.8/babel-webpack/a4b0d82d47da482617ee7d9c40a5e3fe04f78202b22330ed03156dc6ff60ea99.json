{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { AnimalWithPhotosDTO } from '../model/animalWithPhotosDTO.model';\nimport { Animal } from '../model/animal.model';\nexport let UpdateAnimalPageComponent = class UpdateAnimalPageComponent {\n  constructor(adminService, photoService, animalService) {\n    this.adminService = adminService;\n    this.photoService = photoService;\n    this.animalService = animalService;\n    this.animal = new AnimalWithPhotosDTO();\n    this.selectedAnimalProfileId = localStorage.getItem('selectedAnimalProfileId');\n    this.selectedAnimalProfile = new Animal();\n    this.selectedFiles = new Array();\n    this.fileURLs = new Array();\n    this.allAnimalTypes = new Array();\n    this.dob = \"\";\n  }\n  ngOnInit() {\n    console.log(localStorage.getItem('token'));\n    this.read();\n  }\n  getDate(date) {\n    let day = date.getDate();\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n    this.dob = day + '.' + month + '.' + year + '.';\n    console.log(this.dob);\n  }\n  read() {\n    this.animalService.read(this.selectedAnimalProfileId).subscribe(response => {\n      console.log(JSON.parse(response));\n      this.selectedAnimalProfile = JSON.parse(response);\n      this.getDate(new Date(this.selectedAnimalProfile.dateOfBirth));\n    });\n  }\n  register() {\n    this.selectedFiles.forEach(file => {\n      const formData = new FormData();\n      formData.append('image', file, file.name);\n      console.log(file);\n      this.photoService.uploadPhoto(formData).subscribe(response => {\n        console.log(response);\n        // window.location.reload()\n      });\n\n      this.fileURLs.push(file.name);\n      console.log(this.fileURLs);\n    });\n    //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!REGISTRATION\n    if (this.animal.sterilized == null) {\n      this.animal.sterilized = false;\n    }\n    this.animal.chipNumber = Number(this.animal.chipNumber);\n    this.animal.photos = this.fileURLs;\n    console.log(this.fileURLs);\n    console.log(this.animal);\n    this.adminService.updateAnimal(this.animal).subscribe(response => {\n      console.log(response);\n      alert('Successfully updated');\n      const animalId = this.selectedAnimalProfileId;\n      const animalURL = `animal-profile/${animalId}`;\n      window.location.href = animalURL;\n    }, error => {\n      alert(\"Invalid registration\");\n      console.log(error);\n    });\n  }\n  uploadPhoto(event) {\n    const selectedFiles = event.target.files;\n    console.log(selectedFiles);\n    if (selectedFiles.length > 0) {\n      for (let i = 0; i < selectedFiles.length; i++) {\n        this.selectedFile = event.target.files[i];\n        console.log(this.selectedFile);\n        this.selectedFiles.push(this.selectedFile);\n      }\n    }\n    console.log(this.selectedFiles);\n  }\n  readAllAnimalTypes() {\n    this.animalService.allAnimalTypes().subscribe(response => {\n      console.log(JSON.parse(response));\n      // @ts-ignore\n      JSON.parse(response).forEach(typeObject => {\n        this.allAnimalTypes.push(typeObject.animalType);\n      });\n    });\n  }\n};\nUpdateAnimalPageComponent = __decorate([Component({\n  selector: 'app-update-animal-page',\n  templateUrl: './update-animal-page.component.html',\n  styleUrls: ['./update-animal-page.component.css']\n})], UpdateAnimalPageComponent);","map":{"version":3,"names":["Component","AnimalWithPhotosDTO","Animal","UpdateAnimalPageComponent","constructor","adminService","photoService","animalService","animal","selectedAnimalProfileId","localStorage","getItem","selectedAnimalProfile","selectedFiles","Array","fileURLs","allAnimalTypes","dob","ngOnInit","console","log","read","getDate","date","day","month","getMonth","year","getFullYear","subscribe","response","JSON","parse","Date","dateOfBirth","register","forEach","file","formData","FormData","append","name","uploadPhoto","push","sterilized","chipNumber","Number","photos","updateAnimal","alert","animalId","animalURL","window","location","href","error","event","target","files","length","i","selectedFile","readAllAnimalTypes","typeObject","animalType","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\vanja\\Desktop\\diplomski\\animalAdoption\\animalAdoptionFrontend\\src\\app\\modules\\update-animal-page\\update-animal-page.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AnimalService } from '../service/animal.service';\nimport { AdminService } from '../service/admin.service';\nimport { PhotoService } from '../service/photo.service';\nimport { AnimalWithPhotosDTO } from '../model/animalWithPhotosDTO.model';\nimport { Animal } from '../model/animal.model';\n\n@Component({\n  selector: 'app-update-animal-page',\n  templateUrl: './update-animal-page.component.html',\n  styleUrls: ['./update-animal-page.component.css']\n})\nexport class UpdateAnimalPageComponent {\n  public animal: AnimalWithPhotosDTO = new AnimalWithPhotosDTO\n  public selectedAnimalProfileId = localStorage.getItem('selectedAnimalProfileId')\n  public selectedAnimalProfile: Animal = new Animal\n  selectedFile!: File;\n  selectedFiles: Array<File> = new Array()\n  fileURLs : Array<string> = new Array()\n  allAnimalTypes : Array<String> = new Array()\n  public dob : String = \"\"\n\n  constructor(private adminService: AdminService, private photoService: PhotoService, private animalService: AnimalService) { }\n\n  ngOnInit(): void {\n    console.log(localStorage.getItem('token'));\n    this.read()\n  }\n\n\n  public getDate(date : Date) {\n    let day = date.getDate();\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n    this.dob = day + '.' + month + '.' + year + '.'\n    console.log(this.dob)\n  }\n\n  read(){\n    this.animalService.read(this.selectedAnimalProfileId!).subscribe((response: any) => {\n      console.log(JSON.parse(response))\n      this.selectedAnimalProfile = JSON.parse(response)\n\n      this.getDate(new Date(this.selectedAnimalProfile.dateOfBirth))\n\n    }\n   );\n  }\n\n  register(){\n\n  this.selectedFiles.forEach(file => {\n    const formData = new FormData();\n\n    formData.append('image', file, file.name)\n  \n    console.log(file) \n  \n    this.photoService.uploadPhoto(formData).subscribe(response=>{\n      console.log(response)\n      // window.location.reload()\n\n    })\n      this.fileURLs.push(file.name)\n\n      console.log(this.fileURLs)\n\n\n  });\n  //!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!REGISTRATION\n  if(this.animal.sterilized == null){\n    this.animal.sterilized = false\n  }\n\n  this.animal.chipNumber = Number(this.animal.chipNumber)\n  this.animal.photos = this.fileURLs\n\n  console.log(this.fileURLs)\n  console.log(this.animal)\n  \n  this.adminService.updateAnimal(this.animal).subscribe((response: any) => {\n    console.log(response)\n\n    alert('Successfully updated');\n\n    const animalId = this.selectedAnimalProfileId\n    const animalURL = `animal-profile/${animalId}`;\n    window.location.href = animalURL;  \n    \n  },(error) => {\n    alert(\"Invalid registration\");\n    console.log(error);\n  }\n );\n\n  }\n \n  uploadPhoto(event: any) {\n    const selectedFiles: FileList = event.target.files;\n\n    console.log(selectedFiles)\n\n    if (selectedFiles.length > 0) {\n      for (let i = 0; i < selectedFiles.length; i++) {\n        this.selectedFile = <File>event.target.files[i]\n        console.log(this.selectedFile)\n        \n        this.selectedFiles.push(this.selectedFile)\n\n      }\n    }\n\n    console.log(this.selectedFiles)\n  }\n\n  readAllAnimalTypes() {\n\n    this.animalService.allAnimalTypes().subscribe((response: any) => {\n      console.log(JSON.parse(response))\n  \n      // @ts-ignore\n      JSON.parse(response).forEach(typeObject => {\n        \n        this.allAnimalTypes.push(typeObject.animalType)\n      });\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
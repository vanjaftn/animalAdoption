{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AnimalTypeService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = 'http://localhost:9000';\n    this.token = localStorage.getItem('token');\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    this.headers2 = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.token}`\n    });\n    this.headers3 = new HttpHeaders({\n      'Authorization': `Bearer ${this.token}`\n    });\n  }\n  animalSterilized(type) {\n    return this.http.post(this.apiServerUrl + '/animalSterilized', JSON.parse(type), {\n      headers: this.headers2,\n      responseType: 'text'\n    });\n  }\n}\nAnimalTypeService.ɵfac = function AnimalTypeService_Factory(t) {\n  return new (t || AnimalTypeService)(i0.ɵɵinject(i1.HttpClient));\n};\nAnimalTypeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AnimalTypeService,\n  factory: AnimalTypeService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","AnimalTypeService","constructor","http","apiServerUrl","token","localStorage","getItem","headers","headers2","headers3","animalSterilized","type","post","JSON","parse","responseType","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\vanja\\Desktop\\diplomski\\animalAdoption\\animalAdoptionFrontend\\src\\app\\modules\\service\\animalType.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnimalTypeService {\r\n\r\n  private apiServerUrl = 'http://localhost:9000';\r\n  private token = localStorage.getItem('token')\r\n  headers: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json'});\r\n  headers2: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': `Bearer ${this.token}`});\r\n  headers3: HttpHeaders = new HttpHeaders({'Authorization': `Bearer ${this.token}`});\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  animalSterilized(type : string) : Observable<any> {\r\n    return this.http.post(this.apiServerUrl + '/animalSterilized', JSON.parse(type) , {headers: this.headers2, responseType: 'text'});\r\n  }\r\n\r\n}"],"mappings":"AACA,SAAqBA,WAAW,QAA2B,sBAAsB;;;AAMjF,OAAM,MAAOC,iBAAiB;EAQ5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANhB,KAAAC,YAAY,GAAG,uBAAuB;IACtC,KAAAC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC7C,KAAAC,OAAO,GAAgB,IAAIR,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAC,CAAC;IAC7E,KAAAS,QAAQ,GAAgB,IAAIT,WAAW,CAAC;MAAE,cAAc,EAAE,kBAAkB;MAAE,eAAe,EAAE,UAAU,IAAI,CAACK,KAAK;IAAE,CAAC,CAAC;IACvH,KAAAK,QAAQ,GAAgB,IAAIV,WAAW,CAAC;MAAC,eAAe,EAAE,UAAU,IAAI,CAACK,KAAK;IAAE,CAAC,CAAC;EAE1C;EAExCM,gBAAgBA,CAACC,IAAa;IAC5B,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,IAAI,CAACT,YAAY,GAAG,mBAAmB,EAAEU,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC,EAAG;MAACJ,OAAO,EAAE,IAAI,CAACC,QAAQ;MAAEO,YAAY,EAAE;IAAM,CAAC,CAAC;EACnI;;AAZWf,iBAAiB,C;mBAAjBA,iBAAiB,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAjBnB,iBAAiB,C;SAAjBA,iBAAiB;EAAAoB,OAAA,EAAjBpB,iBAAiB,CAAAqB,IAAA;EAAAC,UAAA,EAFhB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
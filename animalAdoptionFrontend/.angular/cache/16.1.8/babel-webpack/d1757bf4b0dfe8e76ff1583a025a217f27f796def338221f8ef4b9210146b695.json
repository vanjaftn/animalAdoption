{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AnimalService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = 'http://localhost:9000';\n    this.token = localStorage.getItem('token');\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    this.headers2 = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.token}`\n    });\n    this.headers3 = new HttpHeaders({\n      'Authorization': `Bearer ${this.token}`\n    });\n  }\n  allAnimals() {\n    return this.http.get(this.apiServerUrl + '/allAnimals', {\n      headers: this.headers,\n      responseType: 'text'\n    });\n  }\n  allAnimalTypes() {\n    return this.http.get(this.apiServerUrl + '/allAnimalTypes', {\n      headers: this.headers,\n      responseType: 'text'\n    });\n  }\n  allAdoptedAnimals() {\n    return this.http.get(this.apiServerUrl + '/allAdoptedAnimals', {\n      headers: this.headers,\n      responseType: 'text'\n    });\n  }\n  allUnadoptedAnimals() {\n    return this.http.get(this.apiServerUrl + '/allUnadoptedAnimals', {\n      headers: this.headers,\n      responseType: 'text'\n    });\n  }\n  allSubscribedAnimals() {\n    return this.http.get(this.apiServerUrl + '/allUsersSubscribedAnimals', {\n      headers: this.headers2,\n      responseType: 'text'\n    });\n  }\n  read(id) {\n    console.log((this.apiServerUrl + '/animal/' + id, {\n      headers: this.headers2,\n      responseType: 'text'\n    }));\n    return this.http.get(this.apiServerUrl + '/animal/' + id, {\n      headers: this.headers2,\n      responseType: 'text'\n    });\n  }\n  delete(id) {\n    console.log(this.headers2);\n    return this.http.post(this.apiServerUrl + '/deleteAnimal/' + id, {\n      headers: this.headers2\n    });\n  }\n  animalSterilized(id) {\n    return this.http.post(this.apiServerUrl + '/animalSterilized', JSON.stringify(id), {\n      headers: this.headers2,\n      responseType: 'text'\n    });\n  }\n}\nAnimalService.ɵfac = function AnimalService_Factory(t) {\n  return new (t || AnimalService)(i0.ɵɵinject(i1.HttpClient));\n};\nAnimalService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AnimalService,\n  factory: AnimalService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","AnimalService","constructor","http","apiServerUrl","token","localStorage","getItem","headers","headers2","headers3","allAnimals","get","responseType","allAnimalTypes","allAdoptedAnimals","allUnadoptedAnimals","allSubscribedAnimals","read","id","console","log","delete","post","animalSterilized","JSON","stringify","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\vanja\\Desktop\\diplomski\\animalAdoption\\animalAdoptionFrontend\\src\\app\\modules\\service\\animal.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnimalService {\r\n\r\n  private apiServerUrl = 'http://localhost:9000';\r\n  private token = localStorage.getItem('token')\r\n  headers: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json'});\r\n  headers2: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': `Bearer ${this.token}`});\r\n  headers3: HttpHeaders = new HttpHeaders({'Authorization': `Bearer ${this.token}`});\r\n\r\n  constructor(private http: HttpClient) { }\r\n  \r\n  allAnimals(): Observable<any> {\r\n    return this.http.get(this.apiServerUrl + '/allAnimals', {headers: this.headers, responseType: 'text'});\r\n  }\r\n\r\n  allAnimalTypes(): Observable<any> {\r\n    return this.http.get(this.apiServerUrl + '/allAnimalTypes', {headers: this.headers, responseType: 'text'});\r\n  }\r\n\r\n  allAdoptedAnimals(): Observable<any> {\r\n    return this.http.get(this.apiServerUrl + '/allAdoptedAnimals', {headers: this.headers, responseType: 'text'});\r\n  }\r\n\r\n  allUnadoptedAnimals(): Observable<any> {\r\n    return this.http.get(this.apiServerUrl + '/allUnadoptedAnimals', {headers: this.headers, responseType: 'text'});\r\n  }\r\n\r\n  allSubscribedAnimals(): Observable<any> {\r\n    return this.http.get(this.apiServerUrl + '/allUsersSubscribedAnimals', {headers: this.headers2, responseType: 'text'});\r\n  }\r\n\r\n  read(id : string) : Observable<any> {\r\n    console.log((this.apiServerUrl + '/animal/' + id , {headers: this.headers2, responseType: 'text'}))\r\n    return this.http.get(this.apiServerUrl + '/animal/' + id , {headers: this.headers2, responseType: 'text'});\r\n  }\r\n\r\n  delete(id : string) : Observable<any> {\r\n    console.log(this.headers2)\r\n    return this.http.post(this.apiServerUrl + '/deleteAnimal/' + id , {headers: this.headers2});\r\n  }\r\n\r\n  animalSterilized(id : string) : Observable<any> {\r\n    return this.http.post(this.apiServerUrl + '/animalSterilized', JSON.stringify(id) , {headers: this.headers2, responseType: 'text'});\r\n  }\r\n\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
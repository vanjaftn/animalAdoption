{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class VaccineService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = 'http://localhost:9000';\n    this.token = localStorage.getItem('token');\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    this.headers2 = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.token}`\n    });\n    this.headers3 = new HttpHeaders({\n      'Authorization': `Bearer ${this.token}`\n    });\n  }\n  create(vaccine) {\n    return this.http.post(this.apiServerUrl + '/vaccine', vaccine, {\n      headers: this.headers2,\n      responseType: 'text'\n    });\n  }\n  readAll() {\n    return this.http.get(this.apiServerUrl + '/allVaccine', {\n      headers: this.headers2,\n      responseType: 'text'\n    });\n  }\n}\nVaccineService.ɵfac = function VaccineService_Factory(t) {\n  return new (t || VaccineService)(i0.ɵɵinject(i1.HttpClient));\n};\nVaccineService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: VaccineService,\n  factory: VaccineService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","VaccineService","constructor","http","apiServerUrl","token","localStorage","getItem","headers","headers2","headers3","create","vaccine","post","responseType","readAll","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\vanja\\Desktop\\diplomski\\animalAdoption\\animalAdoptionFrontend\\src\\app\\modules\\service\\vaccine.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Vaccine } from '../model/vaccine.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VaccineService {\r\n\r\n  private apiServerUrl = 'http://localhost:9000';\r\n  private token = localStorage.getItem('token')\r\n  headers: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json'});\r\n  headers2: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': `Bearer ${this.token}`});\r\n  headers3: HttpHeaders = new HttpHeaders({'Authorization': `Bearer ${this.token}`});\r\n\r\n  constructor(private http: HttpClient) { }\r\n  \r\n  create(vaccine: Vaccine): Observable<any> {\r\n    return this.http.post(this.apiServerUrl + '/vaccine', vaccine, {headers: this.headers2, responseType: 'text'});\r\n  }\r\n\r\n  readAll(): Observable<any> {\r\n    return this.http.get(this.apiServerUrl + '/allVaccine', {headers: this.headers2, responseType: 'text'});\r\n  }\r\n\r\n}"],"mappings":"AACA,SAAqBA,WAAW,QAA2B,sBAAsB;;;AAOjF,OAAM,MAAOC,cAAc;EAQzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANhB,KAAAC,YAAY,GAAG,uBAAuB;IACtC,KAAAC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC7C,KAAAC,OAAO,GAAgB,IAAIR,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAC,CAAC;IAC7E,KAAAS,QAAQ,GAAgB,IAAIT,WAAW,CAAC;MAAE,cAAc,EAAE,kBAAkB;MAAE,eAAe,EAAE,UAAU,IAAI,CAACK,KAAK;IAAE,CAAC,CAAC;IACvH,KAAAK,QAAQ,GAAgB,IAAIV,WAAW,CAAC;MAAC,eAAe,EAAE,UAAU,IAAI,CAACK,KAAK;IAAE,CAAC,CAAC;EAE1C;EAExCM,MAAMA,CAACC,OAAgB;IACrB,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,IAAI,CAACT,YAAY,GAAG,UAAU,EAAEQ,OAAO,EAAE;MAACJ,OAAO,EAAE,IAAI,CAACC,QAAQ;MAAEK,YAAY,EAAE;IAAM,CAAC,CAAC;EAChH;EAEAC,OAAOA,CAAA;IACL,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAC,IAAI,CAACZ,YAAY,GAAG,aAAa,EAAE;MAACI,OAAO,EAAE,IAAI,CAACC,QAAQ;MAAEK,YAAY,EAAE;IAAM,CAAC,CAAC;EACzG;;AAhBWb,cAAc,C;mBAAdA,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdnB,cAAc,C;SAAdA,cAAc;EAAAoB,OAAA,EAAdpB,cAAc,CAAAqB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}
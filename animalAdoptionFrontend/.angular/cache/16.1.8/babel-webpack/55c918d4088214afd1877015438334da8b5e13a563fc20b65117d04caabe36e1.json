{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class VetService {\n  constructor(http) {\n    this.http = http;\n    this.apiServerUrl = 'http://localhost:9000';\n    this.token = localStorage.getItem('token');\n    this.headers = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n    this.headers2 = new HttpHeaders({\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${this.token}`\n    });\n    this.headers3 = new HttpHeaders({\n      'Authorization': `Bearer ${this.token}`\n    });\n  }\n  vetExists() {\n    return this.http.get(this.apiServerUrl + '/vetExists', {\n      headers: this.headers2,\n      responseType: 'text'\n    });\n  }\n  read(id) {\n    return this.http.get(this.apiServerUrl + '/vet/' + id, {\n      headers: this.headers2,\n      responseType: 'text'\n    });\n  }\n  animalIsSterilized(animal) {\n    return this.http.post(this.apiServerUrl + '/animalIsSterilized', animal, {\n      headers: this.headers2,\n      responseType: 'text'\n    });\n  }\n}\nVetService.ɵfac = function VetService_Factory(t) {\n  return new (t || VetService)(i0.ɵɵinject(i1.HttpClient));\n};\nVetService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: VetService,\n  factory: VetService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","VetService","constructor","http","apiServerUrl","token","localStorage","getItem","headers","headers2","headers3","vetExists","get","responseType","read","id","animalIsSterilized","animal","post","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\vanja\\Desktop\\diplomski\\animalAdoption\\animalAdoptionFrontend\\src\\app\\modules\\service\\vet.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Animal } from '../model/animal.model';\r\nimport { CreateVet } from '../model/create-vet.model';\r\nimport { User } from '../model/user.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VetService {\r\n\r\n  private apiServerUrl = 'http://localhost:9000';\r\n  private token = localStorage.getItem('token')\r\n  headers: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json'});\r\n  headers2: HttpHeaders = new HttpHeaders({ 'Content-Type': 'application/json', 'Authorization': `Bearer ${this.token}`});\r\n  headers3: HttpHeaders = new HttpHeaders({'Authorization': `Bearer ${this.token}`});\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  vetExists(): Observable<any> {\r\n    return this.http.get(this.apiServerUrl + '/vetExists', {headers: this.headers2, responseType: 'text'});\r\n  }\r\n\r\n  read(id: string): Observable<any> {\r\n    return this.http.get(this.apiServerUrl + '/vet/' + id, {headers: this.headers2, responseType: 'text'});\r\n  }\r\n\r\n  animalIsSterilized(animal: Animal): Observable<any> {\r\n    return this.http.post(this.apiServerUrl + '/animalIsSterilized', animal,{headers: this.headers2, responseType: 'text'});\r\n  }\r\n\r\n}"],"mappings":"AACA,SAAqBA,WAAW,QAA2B,sBAAsB;;;AASjF,OAAM,MAAOC,UAAU;EAQrBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IANhB,KAAAC,YAAY,GAAG,uBAAuB;IACtC,KAAAC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC7C,KAAAC,OAAO,GAAgB,IAAIR,WAAW,CAAC;MAAE,cAAc,EAAE;IAAkB,CAAC,CAAC;IAC7E,KAAAS,QAAQ,GAAgB,IAAIT,WAAW,CAAC;MAAE,cAAc,EAAE,kBAAkB;MAAE,eAAe,EAAE,UAAU,IAAI,CAACK,KAAK;IAAE,CAAC,CAAC;IACvH,KAAAK,QAAQ,GAAgB,IAAIV,WAAW,CAAC;MAAC,eAAe,EAAE,UAAU,IAAI,CAACK,KAAK;IAAE,CAAC,CAAC;EAE1C;EAExCM,SAASA,CAAA;IACP,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAC,IAAI,CAACR,YAAY,GAAG,YAAY,EAAE;MAACI,OAAO,EAAE,IAAI,CAACC,QAAQ;MAAEI,YAAY,EAAE;IAAM,CAAC,CAAC;EACxG;EAEAC,IAAIA,CAACC,EAAU;IACb,OAAO,IAAI,CAACZ,IAAI,CAACS,GAAG,CAAC,IAAI,CAACR,YAAY,GAAG,OAAO,GAAGW,EAAE,EAAE;MAACP,OAAO,EAAE,IAAI,CAACC,QAAQ;MAAEI,YAAY,EAAE;IAAM,CAAC,CAAC;EACxG;EAEAG,kBAAkBA,CAACC,MAAc;IAC/B,OAAO,IAAI,CAACd,IAAI,CAACe,IAAI,CAAC,IAAI,CAACd,YAAY,GAAG,qBAAqB,EAAEa,MAAM,EAAC;MAACT,OAAO,EAAE,IAAI,CAACC,QAAQ;MAAEI,YAAY,EAAE;IAAM,CAAC,CAAC;EACzH;;AApBWZ,UAAU,C;mBAAVA,UAAU,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAVrB,UAAU,C;SAAVA,UAAU;EAAAsB,OAAA,EAAVtB,UAAU,CAAAuB,IAAA;EAAAC,UAAA,EAFT;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}